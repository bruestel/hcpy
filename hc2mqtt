#!/usr/bin/env python3
# Contact Bosh-Siemens Home Connect devices
# and connect their messages to the mqtt server
import json
import sys
import time
from threading import Thread

import click
import paho.mqtt.client as mqtt

from HCDevice import HCDevice
from HCSocket import HCSocket, now

@click.command()
@click.argument("config_file")
@click.option("-h", "--mqtt_host", default="localhost")
@click.option("-tp", "--mqtt_prefix", default="homeconnect/")
@click.option("-lp", "--mqtt_port", default=1883)
@click.option("-u", "--mqtt_username")
@click.option("-p", "--mqtt_password")
def hc2mqtt(config_file: str, mqtt_host: str, mqtt_prefix: str, mqtt_port: int, mqtt_username: str, mqtt_password: str):
	click.echo(f"Hello {config_file=} {mqtt_host=} {mqtt_prefix=}")

	with open(config_file, "r") as f:
		devices = json.load(f)

	for device in devices:
		mqtt_topic = mqtt_prefix + device["host"]

		client = mqtt.Client()
		client.username_pw_set(mqtt_username, mqtt_password)
		client.will_set(mqtt_topic + "/LWT", payload="Offline", qos=0, retain=True)
		client.connect(host=mqtt_host, port=mqtt_port, keepalive=30)
		client.loop_start()
		
		thread = Thread(target=client_connect, args=(client, device, mqtt_topic))
		thread.start()

def client_connect(client, device, mqtt_topic):
	host = device["host"]

	while True:
		try:
			ws = HCSocket(host, device["key"], device.get("iv",None))
			dev = HCDevice(ws, device.get("features", None))

			#ws.debug = True
			ws.reconnect()

			while True:
				msg = dev.recv()
				client.publish(mqtt_topic + "/LWT",payload="Online", qos=0, retain=True)
				if msg is None:
					break
				if len(msg) > 0:
					print(now(), msg)

					msg = json.dumps(msg)
					print("publish: ", mqtt_topic, msg)
					client.publish(mqtt_topic + "/state", msg)

		except Exception as e:
			print("ERROR", host, e, file=sys.stderr)
			client.publish(mqtt_topic + "/LWT",payload="Offline", qos=0, retain=True)

		time.sleep(10)

if __name__ == "__main__":
	hc2mqtt()
